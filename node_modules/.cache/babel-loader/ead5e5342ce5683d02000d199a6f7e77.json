{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ushma Projects\\\\ReactJs\\\\employee-registration-form\\\\src\\\\components\\\\AllEmployees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Employee from './Employee';\nimport base_url from '../api/bootapi';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllEmployees = () => {\n  _s();\n\n  useEffect(() => {\n    document.title = \"All Employees\";\n  }, []); //function to get employees\n\n  const getAllEmployees = () => {\n    axios.get(`${base_url}/employees`).then(response => {\n      //success\n      console.log(response.data);\n      toast.success(\"Employees has been loaded\", {\n        position: \"bottom-center\"\n      });\n      setEmployees(response.data);\n    }, error => {\n      //for error\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  };\n\n  const updateEmployees = employeeNo => {\n    setEmployees(employees.filter(c => c.employeeNo != employeeNo));\n  }; //calling loading employee function\n\n\n  useEffect(() => {\n    getAllEmployees();\n  }, []);\n  const [employees, setEmployees] = useState([{\n    employeeNo: \"123\",\n    employeeName: \"abc\"\n  }, {\n    employeeNo: \"456\",\n    employeeName: \"abcwe\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Employees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"List of employees are as follows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), employees.length > 0 ? employees.map(item => /*#__PURE__*/_jsxDEV(Employee, {\n      employee: item,\n      update: updateEmployees\n    }, item.employeeNo, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)) : \"No Employees\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 1\n  }, this);\n};\n\n_s(AllEmployees, \"EUZ1B3ni/kW1aHIH6jObNshUKNU=\");\n\n_c = AllEmployees;\nexport default AllEmployees;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllEmployees\");","map":{"version":3,"sources":["D:/Ushma Projects/ReactJs/employee-registration-form/src/components/AllEmployees.js"],"names":["React","useState","useEffect","Employee","base_url","axios","toast","AllEmployees","document","title","getAllEmployees","get","then","response","console","log","data","success","position","setEmployees","error","updateEmployees","employeeNo","employees","filter","c","employeeName","length","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvBL,EAAAA,SAAS,CAAE,MAAM;AACbM,IAAAA,QAAQ,CAACC,KAAT,GAAe,eAAf;AACH,GAFQ,EAEP,EAFO,CAAT,CAFuB,CAMvB;;AACA,QAAMC,eAAe,GAAG,MAAK;AACzBL,IAAAA,KAAK,CAACM,GAAN,CAAW,GAAEP,QAAS,YAAtB,EAAmCQ,IAAnC,CACKC,QAAD,IAAa;AACT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAV,MAAAA,KAAK,CAACW,OAAN,CAAc,2BAAd,EAA0C;AAACC,QAAAA,QAAQ,EAAG;AAAZ,OAA1C;AAEAC,MAAAA,YAAY,CAACN,QAAQ,CAACG,IAAV,CAAZ;AACH,KAPL,EAQKI,KAAD,IAAW;AACP;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAd,MAAAA,KAAK,CAACc,KAAN,CAAY,sBAAZ;AACH,KAZL;AAcH,GAfD;;AAiBA,QAAMC,eAAe,GAAGC,UAAD,IAAgB;AACnCH,IAAAA,YAAY,CAACI,SAAS,CAACC,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACH,UAAF,IAAgBA,UAAxC,CAAD,CAAZ;AACH,GAFD,CAxBuB,CA6BvB;;;AACApB,EAAAA,SAAS,CAAE,MAAM;AACbQ,IAAAA,eAAe;AAClB,GAFQ,EAEP,EAFO,CAAT;AAIA,QAAM,CAACa,SAAD,EAAWJ,YAAX,IAAyBlB,QAAQ,CACnC,CACI;AAACqB,IAAAA,UAAU,EAAC,KAAZ;AAAkBI,IAAAA,YAAY,EAAC;AAA/B,GADJ,EAEI;AAACJ,IAAAA,UAAU,EAAC,KAAZ;AAAkBI,IAAAA,YAAY,EAAC;AAA/B,GAFJ,CADmC,CAAvC;AAMJ,sBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIQH,SAAS,CAACI,MAAV,GAAmB,CAAnB,GAAuBJ,SAAS,CAACK,GAAV,CAAeC,IAAD,iBACjC,QAAC,QAAD;AAAiC,MAAA,QAAQ,EAAEA,IAA3C;AAAiD,MAAA,MAAM,EACnDR;AADJ,OAAeQ,IAAI,CAACP,UAApB;AAAA;AAAA;AAAA;AAAA,YADmB,CAAvB,GAIF,cARN;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAcC,CAtDD;;GAAMf,Y;;KAAAA,Y;AAwDN,eAAeA,YAAf","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport Employee from './Employee';\r\n\r\nimport base_url from '../api/bootapi';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AllEmployees = () => {\r\n\r\n    useEffect( () => {\r\n        document.title=\"All Employees\";\r\n    },[]);\r\n\r\n    //function to get employees\r\n    const getAllEmployees = () =>{\r\n        axios.get(`${base_url}/employees`).then(\r\n            (response) =>{\r\n                //success\r\n                console.log(response.data);\r\n                toast.success(\"Employees has been loaded\",{position : \"bottom-center\"}\r\n                );\r\n                setEmployees(response.data);\r\n            },\r\n            (error) => {\r\n                //for error\r\n                console.log(error);\r\n                toast.error(\"Something went wrong\");\r\n            }\r\n        );\r\n    };\r\n\r\n    const updateEmployees= (employeeNo) => {\r\n        setEmployees(employees.filter((c) => c.employeeNo != employeeNo));\r\n    };\r\n\r\n\r\n    //calling loading employee function\r\n    useEffect( () => {\r\n        getAllEmployees();\r\n    },[]);\r\n\r\n    const [employees,setEmployees]=useState(\r\n        [\r\n            {employeeNo:\"123\",employeeName:\"abc\"},\r\n            {employeeNo:\"456\",employeeName:\"abcwe\"}\r\n        ]);\r\n\r\nreturn(\r\n<div>\r\n    <h1>All Employees</h1>\r\n    <p>List of employees are as follows</p>\r\n    {\r\n        employees.length > 0 ? employees.map((item)=>(\r\n            <Employee key={item.employeeNo}  employee={item} update={\r\n                updateEmployees\r\n            }  />) \r\n    ):\"No Employees\"\r\n    }\r\n</div>\r\n);\r\n\r\n};\r\n\r\nexport default AllEmployees;\r\n"]},"metadata":{},"sourceType":"module"}